# -*- coding: utf-8 -*-
"""flaskCRUD.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1h5C5wss877bzh18X65GPbUJcehmyWUrN
"""

from flask_sqlalchemy import SQLAlchemy
 
studentDatabase = SQLAlchemy()
 
class studentModel(studentDatabase.Model):
    __tablename__ = "table"
 
    studentId = studentDatabase.Column(studentDatabase.Integer, primary_key=True)
    firstName = studentDatabase.Column(studentDatabase.String())
    lastName = studentDatabase.Column(studentDatabase.String())
    dob=studentDatabase.Column(studentDatabase.Integer)
    amountDue = studentDatabase.Column(studentDatabase.Integer())
 
    def __init__(self,studentId,firstName,lastName,dob,amountDue):
        self.studentId = studentId
        self.firstName = firstName
        self.lastName = lastName
        self.dob = dob
        self.amountDue = amountDue
    
    def __repr__(self):
        return f"{self.firstName}:{self.studentId}"

from flask import Flask,render_template,request,redirect
#from models import studentDatabase,studentModel
 
app = Flask(__name__,template_folder='template')
 
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///data.studentDatabase'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
studentDatabase.init_app(app)
 
@app.before_first_request
def create_table():
  studentDatabase.create_all()
 
@app.route('/data/create' , methods = ['GET','POST'])
def create():
    if request.method == 'GET':
        return render_template('createpage.html')
 
    if request.method == 'POST':
        studentId = request.form['studentId']
        firstName = request.form['firstName']
        lastName = request.form['lastName']
        dob = request.form['dob']
        amountDue = request.form['amountDue']
        student = studentModel(studentId=studentId,firstName=firstName,lastName=lastName,dob=dob,amountDue=amountDue)
        studentDatabase.session.add(student)
        studentDatabase.session.commit()
        return redirect('/data')
 
 
@app.route('/data')
def RetrieveList():
    students = studentModel.query.all()
    return render_template('datalist.html',students = students)
 
 
@app.route('/data/<int:id>')
def RetrieveStudent(id):
    student = studentModel.query.filter_by(studentId=id).first()
    if student:
      return render_template('data.html', student = student)
    return f"Student with id ={id} Doenst exist"
 
 
@app.route('/data/<int:id>/update',methods = ['GET','POST'])
def update(id):
    student = studentModel.query.filter_by(studentId=id).first()
    if request.method == 'POST':
        if student:
          studentDatabase.session.delete(student)
          studentDatabase.session.commit()
          firstName = request.form['firstName']
          lastName = request.form['lastName']
          dob = request.form['dob']
          amountDue = request.form['amountDue']
          student = studentModel(studentId=id,firstName=firstName,lastName=lastName,dob=dob,amountDue = amountDue)
          studentDatabase.session.add(student)
          studentDatabase.session.commit()
          return redirect(f'/data/{id}')
        return f"Employee with id = {id} Does nit exist"
 
    return render_template('update.html', student = student)
 
 
@app.route('/data/<int:id>/delete', methods=['GET','POST'])
def delete(id):
    student = studentModel.query.filter_by(studentId=id).first()
    if request.method == 'POST':
        if student:
            studentDatabase.session.delete(student)
            studentDatabase.session.commit()
            return redirect('/data')
        abort(404)
 
    return render_template('delete.html')

if __name__ == "__main__":
  app.run(host='localhost', port=5000)